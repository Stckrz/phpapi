CREATE TABLE shopItems (
	shopItemId int AUTO_INCREMENT PRIMARY KEY,
	shopItemName VARCHAR(100),
	price FLOAT,
	buyPrice FLOAT,
	quantity INT(11),,
	parAmount INT(11)
);

CREATE TABLE bulkPurchase(
	bulkPurchaseId int AUTO_INCREMENT PRIMARY KEY,
	totalPurchaseAmount FLOAT,
	purchaseDate DATE
);

CREATE TABLE purchasedItems (
	shopItemId INT,
	bulkPurchaseId INT,
	shopItemQuantity INT,
	PRIMARY KEY (shopItemId, bulkPurchaseId),
	FOREIGN KEY (shopItemId) REFERENCES shopItems(shopItemId),
	FOREIGN KEY (bulkPurchaseId) REFERENCES bulkPurchase(bulkPurchaseId)
);

CREATE TABLE receivedOrder(
	receivedOrderId int AUTO_INCREMENT PRIMARY KEY,
	totalOrderAmount FLOAT,
	orderDate DATE
);

CREATE TABLE purchasedItems (
	shopItemId INT,
	receivedOrderId INT,
	shopItemQuantity INT,
	PRIMARY KEY (shopItemId, receivedOrderId),
	FOREIGN KEY (shopItemId) REFERENCES shopItems(shopItemId),
	FOREIGN KEY (receivedOrderId) REFERENCES receivedOrder(receivedOrderId)
);

//This query will get the shopItemId and shopItem Name of every item that is in bulkPurchaseId of 1.
SELECT shopItems.shopItemId, shopItems.shopItemName
FROM shopItems
JOIN purchasedItems e ON shopItems.shopItemId = e.shopItemId
WHERE e.bulkPurchaseId = 1;


//this will get a table which includes the bulkPurchaseId, shopItemId, shopItemName, and shopItem Quantity for each item in pulkPurchaseId with an id of 1
SELECT 
	bulkPurchase.bulkPurchaseId,
	shopItems.shopItemId, 
	shopItems.shopItemName,
    purchasedItems.shopItemQuantity
FROM shopItems
JOIN purchasedItems ON shopItems.shopItemId = purchasedItems.shopItemId
JOIN bulkPurchase ON purchasedItems.bulkPurchaseId = bulkPurchase.bulkPurchaseId
WHERE bulkPurchase.bulkPurchaseId = 1;
